group 'com.pochemuto'
version '0.9.0'

apply plugin: 'java'
apply plugin: 'gradle-one-jar'
apply plugin: 'maven'
apply plugin: 'signing'


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.netty', name: 'netty-all', version: '4.1.6.Final'
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.10'


    testCompile group: 'junit', name: 'junit', version: '4.11'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.pochemuto.orvibo.HttpGate',
        )
    }
}

javadoc {
    options.tags = [ 'date' ]
}

signing {
    sign configurations.archives
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives fatJar
    archives jar
    archives javadocJar
    archives sourcesJar
}

def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('ossrhUsername')
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhPassword')

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Orvibo API'
                packaging 'jar'
                description 'Orvibo Java API provides control from code and via http'
                url 'http://github.com/pochemuto/orvibo'

                scm {
                    url 'https://github.com:pochemuto/orvibo'
                    connection 'scm:git@github.com:pochemuto/orvibo.git'
                    developerConnection 'scm:git@github.com:pochemuto/orvibo.git'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'pochemuto'
                        name 'Alexander Kramarev'
                        email 'pochemuto@gmail.com'
                    }
                }
            }
        }
    }
}